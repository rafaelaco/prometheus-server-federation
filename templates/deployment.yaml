{{- range $index, $item := .Values.prometheusInstances }}
{{- range $indexShard, $e := until (int (coalesce $item.shards 1)) }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.name" . }}-{{ $item.type }}-{{ $index }}-{{ $indexShard }}
  labels:
{{ include "common.selectorLabels" (dict "releaseName" $.Release.Name) | indent 4 }}
spec:
  replicas: 1
  strategy:
    type: "Recreate"
    rollingUpdate: null
  selector:
    matchLabels:
{{ include "common.selectorLabels" (dict "releaseName" $.Release.Name) | indent 6 }}
{{ printf "type: %s" $item.type | indent 6 }}
{{ printf "instance: %s-%d-%d" $item.type $index $indexShard | indent 6 }}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
{{ include "common.selectorLabels" (dict "releaseName" $.Release.Name) | indent 8 }}
{{ printf "type: %s" $item.type | indent 8 }}
{{ printf "instance: %s-%d-%d" $item.type $index $indexShard | indent 8 }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
    spec:
{{- if $.Values.image.pullSecrets }}
      imagePullSecrets:
{{ toYaml $.Values.image.pullSecrets | indent 8 }}
{{- end }}
      serviceAccountName: {{ include "common.name" . }}
      initContainers:
      - name: prometheus-init
        image: alpine:3.17.0
        command: ['sh', '-c', 'mkdir {{ include "common.name" . }}-{{ $item.type }}-{{ $index }}-{{ $indexShard }} -p && exit 0']
        volumeMounts:
        - name: prometheus-storage-volume
          mountPath: /persistent-volume
          readOnly: false
      containers:
      - name: {{ include "common.name" . }}
        {{ if $.Values.environmentVariables }}
        env:
          {{ range $env := $.Values.environmentVariables }}
          - name: {{ $env.name | quote }}
            value: {{ $env.value | quote }}
          {{ end }}
        {{ end }}
        resources:
          limits:
            cpu: {{ default "500m" $item.resourcesLimitsCpu }}
            memory: {{ default "1024Mi" $item.resourcesLimitsMemory }}
          requests:
            cpu: {{ default "150m" $item.resourcesRequestsCpu }}
            memory: {{ default "512Mi" $item.resourcesRequestsMemory }}
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9090
            scheme: HTTP
          initialDelaySeconds: {{ $.Values.readinessProbeInitialDelaySeconds }}
          periodSeconds: {{ $.Values.readinessProbePeriodSeconds }}
          timeoutSeconds: {{ $.Values.readinessProbeTimeoutSeconds }}
          failureThreshold: {{ $.Values.readinessProbeFailureThreshold }}
          successThreshold: {{ $.Values.readinessProbeSuccessThreshold }}
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9090
            scheme: HTTP
          initialDelaySeconds: {{ $.Values.livenessProbeInitialDelaySeconds }}
          periodSeconds: {{ $.Values.livenessProbePeriodSeconds }}
          timeoutSeconds: {{ $.Values.livenessProbeTimeoutSeconds }}
          failureThreshold: {{ $.Values.livenessProbeFailureThreshold }}
          successThreshold: {{ $.Values.livenessProbeSuccessThreshold }}
        image: "{{ $.Values.image.repository }}/prometheus:{{ $.Values.image.tag }}"
        args:
          - '--storage.tsdb.retention.time={{ default "2h" $item.storageTsdbRetentionTime }}'
          - '--storage.tsdb.retention.size={{ default "50GB" $item.storageTsdbRetentionSize }}'
          - '--storage.tsdb.path=/persistent-volume/{{ include "common.name" . }}-{{ $item.type }}-{{ $index }}-{{ $indexShard }}'
          - '--config.file=/etc/prometheus/prometheus.yml'
          - '--query.timeout={{ default "10s" $item.queryTimeout }}'
        ports:
        - name: prometheus
          containerPort: 9090
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus
        - name: prometheus-storage-volume
          mountPath: /persistent-volume
          readOnly: false
      restartPolicy: Always
      volumes:
      - name: prometheus-config
        configMap:
          name: {{ include "common.name" . }}-{{ $item.type }}-{{ $index }}-{{ $indexShard }}
      - name: prometheus-storage-volume
        persistentVolumeClaim:
          claimName: {{ include "common.name" . }}-{{ $item.type }}-{{ $index }}-{{ $indexShard }}
{{- end }}
{{- end }}