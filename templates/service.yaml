{{- range $index, $item := .Values.prometheusInstances }}
{{- range $indexShard, $e := until (int (coalesce $item.shards 1)) }}
{{- if and (eq $.Values.thanos.enabled true) (eq $item.type "primary") }}
{{- else }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "common.name" . }}-{{ $item.type }}-{{ $index }}-{{ $indexShard }}
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
spec:
  selector:
{{ include "common.selectorLabels" (dict "releaseName" $.Release.Name) | indent 4 }}
{{ printf "type: %s" $item.type | indent 4 }}
{{ printf "instance: %s-%d-%d" $item.type $index $indexShard | indent 4 }}
  type: ClusterIP
  {{ if eq $item.type "replica" }}
  {{ if eq $.Values.replicaDaemonSet true }}
  clusterIP: None
  {{ end }}
  {{ end }}
  ports:
    - name: prometheus
      port: 9090
      targetPort: 9090
    {{ if eq $item.type "replica" }}
    {{ if eq $.Values.thanos.enabled true }}
    - name: thanos-grpc
      port: 19090
      targetPort: 19090
    {{ end }}
    {{ end }}
{{- if and (eq $.Values.thanos.enabled true) (eq $item.type "replica") }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "common.name" . }}-thanos-store-{{ $index }}-{{ $indexShard }}
spec:
  selector:
{{ include "common.selectorLabels" (dict "releaseName" "thanos-store") | indent 4 }}
  type: ClusterIP
  clusterIP: None
  ports:
    - name: thanos-http
      port: 19191
      targetPort: 19191
    - name: thanos-grpc
      port: 19090
      targetPort: 19090
{{- end }}
{{- end }}
{{- end }}
{{- end }}
